<?php$route = '/blog/';$app->get($route, function ()  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();		if(isset($params['query'])){ $query = trim(mysql_real_escape_string($params['query'])); } else { $query = '';}	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'Title';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}					// Pull from MySQL	if($query!='')		{		$Query = "SELECT * FROM blog WHERE Title LIKE '%" . $query . "%'";		}	else 		{
		$Query = "SELECT * FROM blog";		
		}	$Query .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{					$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];							// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});	$route = '/blog/published/';$app->get($route, function ()  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();		if(isset($params['query'])){ $query = trim(mysql_real_escape_string($params['query'])); } else { $query = '';}	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'Title';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}					// Pull from MySQL	if($query!='')		{		$Query = "SELECT * FROM blog WHERE Show_On_Site = 1 AND  Title LIKE '%" . $query . "%'";		}	else 		{		$Query = "SELECT * FROM blog WHERE Show_On_Site = 1";				}	$Query .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{					$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];					// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}							array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo stripslashes(format_json(json_encode($ReturnObject)));	});		$route = '/blog/draft/';$app->get($route, function ()  use ($app){	$ReturnObject = array(); 	$request = $app->request();  	$params = $request->params();		if(isset($params['query'])){ $query = trim(mysql_real_escape_string($params['query'])); } else { $query = '';}	if(isset($params['page'])){ $page = trim(mysql_real_escape_string($params['page'])); } else { $page = 0;}	if(isset($params['count'])){ $count = trim(mysql_real_escape_string($params['count'])); } else { $count = 250;}	if(isset($params['sort'])){ $sort = trim(mysql_real_escape_string($params['sort'])); } else { $sort = 'Title';}	if(isset($params['order'])){ $order = trim(mysql_real_escape_string($params['order'])); } else { $order = 'DESC';}					// Pull from MySQL	if($query!='')		{		$Query = "SELECT * FROM blog WHERE Show_On_Site = 0 AND  Title LIKE '%" . $query . "%'";		}	else 		{		$Query = "SELECT * FROM blog WHERE Show_On_Site = 0";				}	$Query .= " ORDER BY " . $sort . " " . $order . " LIMIT " . $page . "," . $count;	//echo $Query . "<br />";		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{					$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];								// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}							array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/blog/';	$app->post($route, function () use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($params['post_date'])){ $post_date = mysql_real_escape_string($params['post_date']); } else { $post_date = date('Y-m-d H:i:s'); }	if(isset($params['title'])){ $title = mysql_real_escape_string($params['title']); } else { $title = 'No Title'; }	if(isset($params['author'])){ $author = mysql_real_escape_string($params['author']); } else { $author = ''; }	if(isset($params['summary'])){ $summary = mysql_real_escape_string($params['summary']); } else { $summary = ''; }	if(isset($params['body'])){ $body = mysql_real_escape_string($params['body']); } else { $body = ''; }	if(isset($params['footer'])){ $footer = mysql_real_escape_string($params['footer']); } else { $footer = ''; }  	$Query = "SELECT * FROM blog WHERE Title = '" . $title . "' AND Author = '" . $author . "'";	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{			$ThisBlog = mysql_fetch_assoc($Database);			$blog_id = $ThisBlog['ID'];		}	else 		{		$Query = "INSERT INTO blog(Post_Date,Title,Author,Summary,Body,Footer)";		$Query .= " VALUES(";		$Query .= "'" . mysql_real_escape_string($post_date) . "',";		$Query .= "'" . mysql_real_escape_string($title) . "',";		$Query .= "'" . mysql_real_escape_string($author) . "',";		$Query .= "'" . mysql_real_escape_string($summary) . "',";		$Query .= "'" . mysql_real_escape_string($body) . "',";		$Query .= "'" . mysql_real_escape_string($footer) . "'";		$Query .= ")";		//echo $Query . "<br />";		mysql_query($Query) or die('Query failed: ' . mysql_error());		$blog_id = mysql_insert_id();					}	$ReturnObject['blog_id'] = $blog_id;		$app->response()->header("Content-Type", "application/json");	echo format_json(json_encode($ReturnObject));	});	$route = '/blog/tags/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS API_Count from tags t";	$Query .= " INNER JOIN blog_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$blog_count = $Database['Blog_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['blog_count'] = $blog_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/blog/tags/byweek/';$app->get($route, function ()  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }	$Query = "SELECT t.Tag_ID, t.Tag, count(*) AS Blog_Count from tags t";	$Query .= " JOIN blog_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " JOIN blog b ON btp.Blog_ID = b.ID";	$Query .= " WHERE WEEK(b.Post_Date) = " . $week . " AND YEAR(b.Post_Date) = " . $year;	$Query .= " GROUP BY t.Tag ORDER BY count(*) DESC";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$tag_id = $Database['Tag_ID'];		$tag = $Database['Tag'];		$blog_count = $Database['Blog_Count'];		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['blog_count'] = $blog_count;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/blog/tags/:tag';$app->delete($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();		$Query = "SELECT t.Tag_ID, t.Tag FROM tags WHERE Tag = '" . trim(mysql_real_escape_string($tag)) . "'";	$TagResult = mysql_query($LinkQuery) or die('Query failed: ' . mysql_error());			if($TagResult && mysql_num_rows($TagResult))		{			$Tag = mysql_fetch_assoc($TagResult);		$Tag_ID = $Tag['Tag_ID'];		$Tag_Text = $Tag['Tag'];		$DeleteQuery = "DELETE FROM blog_tag_pivot WHERE Tag_ID = " . $Tag_ID;		$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());					$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $Tag_Text;		$F['blog_count'] = 0;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/blog/tags/:tag/blog/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT b.* from tags t";	$Query .= " JOIN blog_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " JOIN blog b ON btp.Blog_ID = b.ID";	$Query .= " WHERE WEEK(b.Post_Date) = " . $week . " AND YEAR(b.Post_Date) = " . $year . " AND Tag = '" . $tag . "'";	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];								// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;		$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}							array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/blog/tags/:tag/build/';$app->get($route, function ($tag)  use ($app){	$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($_REQUEST['week'])){ $week = $params['week']; } else { $week = date('W'); }	if(isset($_REQUEST['year'])){ $year = $params['year']; } else { $year = date('Y'); }		$Query = "SELECT DISTINCT b.* from tags t";	$Query .= " JOIN blog_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " JOIN blog b ON btp.Blog_ID = b.ID";	$Query .= " WHERE b.Build_Page = 1 AND (Github_Build NOT LIKE '%" . $tag . "%' OR Github_Build IS NULL) and Tag = '" . $tag . "' LIMIT 25";	//echo $Query;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{		$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];								// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;		$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}						if(strlen($githubbuild) > 1) 			{			$githubbuild .= "," . $tag;			}		else			{			$githubbuild .= $tag;			}					$UpdateQuery = "UPDATE blog SET Github_Build = '" . $githubbuild . "' WHERE ID = " . $blog_id;			$UpdateResult = mysql_query($UpdateQuery) or die('Query failed: ' . mysql_error());	  												array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/blog/:blog_id/';$app->get($route, function ($blog_id)  use ($app){	$ReturnObject = array();			$Query = "SELECT * FROM blog WHERE ID = " . $blog_id;		$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());	  	while ($Database = mysql_fetch_assoc($DatabaseResult))		{								$blog_id = $Database['ID'];		$post_date = $Database['Post_Date'];		$title = $Database['Title'];		$author = $Database['Author'];		$summary = $Database['Summary'];		$body = $Database['Body'];		$footer = $Database['Footer'];		$status = $Database['Status'];		$buildpage = $Database['Build_Page'];		$githubbuild = $Database['Github_Build'];		$twitterbuild = $Database['Twitter_Build'];		$linkedinbuild = $Database['LinkedIn_Build'];		$showonsite = $Database['Show_On_Site'];		$image = $Database['Feature_Image'];									// manipulation zone				$F = array();		$F['blog_id'] = $blog_id;		$F['post_date'] = $post_date;		$F['title'] = $title;		$F['author'] = $author;		$F['summary'] = $summary;		$F['body'] = $body;		$F['footer'] = $footer;		$F['status'] = $status;		$F['image'] = $image;		$F['build_page'] = $buildpage;		$F['github_build'] = $githubbuild;		$F['twitter_build'] = $twitterbuild;		$F['linkedin_build'] = $linkedinbuild;		$F['show_on_site'] = $showonsite;				$F['tags'] = array();				$TagQuery = "SELECT t.tag_id, t.tag from tags t";		$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";		$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;		$TagQuery .= " ORDER BY t.tag DESC";		$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());		  		while ($Tag = mysql_fetch_assoc($TagResult))			{			$thistag = $Tag['tag'];						$T = array();			$T = $thistag;			array_push($F['tags'], $T);			//echo $thistag . "<br />";				if($thistag=='Archive')				{				$archive = 1;					}								}							$ReturnObject = $F;		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});		$route = '/blog/:blog_id/tags/:tag/';$app->delete($route, function ($blog_id,$tag)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if($tag != '')		{			$blog_id = trim(mysql_real_escape_string($blog_id));		$tag = trim(mysql_real_escape_string($tag));			$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$tag_id = $Tag['Tag_ID'];			$DeleteQuery = "DELETE FROM blog_tag_pivot where Tag_ID = " . trim($tag_id) . " AND Blog_ID = " . trim($blog_id);			$DeleteResult = mysql_query($DeleteQuery) or die('Query failed: ' . mysql_error());			}		$F = array();		$F['tag_id'] = $tag_id;		$F['tag'] = $tag;		$F['blog_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});			$route = '/blog/:blog_id/tags/';$app->get($route, function ($blog_id)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			$Query = "SELECT t.Tag_ID, t.Tag FROM tags t";	$Query .= " JOIN blog_tag_pivot btp ON t.Tag_ID = btp.Tag_ID";	$Query .= " WHERE btp.Blog_ID = " . $blog_id;	$DatabaseResult = mysql_query($Query) or die('Query failed: ' . mysql_error());			while ($Database = mysql_fetch_assoc($DatabaseResult))		{					$Tag_ID = $Database['Tag_ID'];		$Tag_Text = $Database['Tag'];		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $Tag_Text;				array_push($ReturnObject, $F);		}		$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});					$route = '/blog/:blog_id/tags/';$app->post($route, function ($Blog_ID)  use ($app){	$ReturnObject = array();		 	$request = $app->request();  	$param = $request->params();			if(isset($param['tag']))		{		$tag = trim(mysql_real_escape_string($param['tag']));					$CheckTagQuery = "SELECT Tag_ID FROM tags where Tag = '" . $tag . "'";		$CheckTagResults = mysql_query($CheckTagQuery) or die('Query failed: ' . mysql_error());				if($CheckTagResults && mysql_num_rows($CheckTagResults))			{			$Tag = mysql_fetch_assoc($CheckTagResults);					$Tag_ID = $Tag['Tag_ID'];			}		else			{			$query = "INSERT INTO tags(Tag) VALUES('" . trim($_POST['Tag']) . "'); ";			mysql_query($query) or die('Query failed: ' . mysql_error());				$Tag_ID = mysql_insert_id();						}		$CheckTagPivotQuery = "SELECT * FROM blog_tag_pivot where Tag_ID = " . trim($Tag_ID) . " AND Blog_ID = " . trim($Blog_ID);		$CheckTagPivotResult = mysql_query($CheckTagPivotQuery) or die('Query failed: ' . mysql_error());				if($CheckTagPivotResult && mysql_num_rows($CheckTagPivotResult))			{			$CheckTagPivot = mysql_fetch_assoc($CheckTagPivotResult);					}		else			{			$query = "INSERT INTO blog_tag_pivot(Tag_ID,Blog_ID) VALUES(" . $Tag_ID . "," . $Blog_ID . "); ";			mysql_query($query) or die('Query failed: ' . mysql_error());								}		$F = array();		$F['tag_id'] = $Tag_ID;		$F['tag'] = $tag;		$F['blog_count'] = 0;				array_push($ReturnObject, $F);		}				$app->response()->header("Content-Type", "application/json");		echo format_json(json_encode($ReturnObject));	});				$route = '/blog/:blog_id/';	$app->put($route, function ($blog_id) use ($app){			$ReturnObject = array();	 	$request = $app->request();  	$params = $request->params();			if(isset($params['post_date'])){ $post_date = mysql_real_escape_string($params['post_date']); } else { $post_date = date('Y-m-d H:i:s'); }	if(isset($params['title'])){ $title = mysql_real_escape_string($params['title']); } else { $title = ''; }	if(isset($params['author'])){ $author = mysql_real_escape_string($params['author']); } else { $author = ''; }	if(isset($params['summary'])){ $summary = mysql_real_escape_string($params['summary']); } else { $summary = ''; }	if(isset($params['body'])){ $body = mysql_real_escape_string($params['body']); } else { $body = ''; }	if(isset($params['build_page'])){ $build_page = mysql_real_escape_string($params['build_page']); } else { $build_page = ''; }	if(isset($params['github_build'])){ $github_build = mysql_real_escape_string($params['github_build']); } else { $github_build = ''; }	if(isset($params['twitter_build'])){ $twitter_build = mysql_real_escape_string($params['twitter_build']); } else { $twitter_build = ''; }	if(isset($params['linkedin_build'])){ $linkedin_build = mysql_real_escape_string($params['linkedin_build']); } else { $linkedin_build = ''; }	if(isset($params['footer'])){ $footer = mysql_real_escape_string($params['footer']); } else { $footer = ''; }  	$Query = "SELECT * FROM blog WHERE ID = " . $blog_id;	//echo $Query . "<br />";	$Database = mysql_query($Query) or die('Query failed: ' . mysql_error());		if($Database && mysql_num_rows($Database))		{						$query = "UPDATE blog SET";		$query .= " Flag = 1";				if($title!='') { $title .= ", Title = '" . mysql_real_escape_string($title) . "'"; }		if($body!='') { $query .= ", Body = '" . $body . "'"; }		if($author!='') { $query .= ", Author = '" . $author . "'"; }		if($summary!='') { $query .= ", Summary = '" . $summary . "'"; }		if($body!='') { $query .= ", Body = '" . $body . "'"; }				if($build_page!='') { $query .= ", Build_Page = '" . mysql_real_escape_string($build_page) . "'"; }		if($github_build!='') { $query .= ", Github_Build = '" . mysql_real_escape_string($github_build) . "'"; }		if($twitter_build!='') { $query .= ", Twitter_Build = '" . mysql_real_escape_string($twitter_build) . "'"; }		if($linkedin_build!='') { $query .= ", LinkedIn_Build = '" . mysql_real_escape_string($linkedin_build) . "'"; }				if($footer!='') { $query .= ", Footer = '" . $footer . "'"; }				$query .= " WHERE ID = " . $blog_id;				echo $query . "<br />";		mysql_query($query) or die('Query failed: ' . mysql_error());			}	$F = array();	$F['blog_id'] = $blog_id;	$F['post_date'] = $post_date;	$F['title'] = $title;	$F['author'] = $author;	$F['summary'] = $summary;	$F['body'] = $body;	$F['footer'] = $footer;		$F['tags'] = array();		$TagQuery = "SELECT t.tag_id, t.tag from tags t";	$TagQuery .= " INNER JOIN blog_tag_pivot btp ON t.tag_id = btp.tag_id";	$TagQuery .= " WHERE btp.Blog_ID = " . $blog_id;	$TagQuery .= " ORDER BY t.tag DESC";	$TagResult = mysql_query($TagQuery) or die('Query failed: ' . mysql_error());	  	while ($Tag = mysql_fetch_assoc($TagResult))		{		$thistag = $Tag['tag'];				$T = array();		$T = $thistag;		array_push($F['tags'], $T);		//echo $thistag . "<br />";			if($thistag=='Archive')			{			$archive = 1;				}								}				array_push($ReturnObject, $F);			$app->response()->header("Content-Type", "application/json");	echo stripslashes(format_json(json_encode($ReturnObject)));	});	$route = '/blog/:blog_id/';	$app->delete($route, function ($blog_id) use ($app){		$Add = 1;	$ReturnObject = array();	 	$request = $app->request();  	$_POST = $request->params();		$query = "DELETE FROM blog WHERE ID = " . $blog_id;	//echo $query . "<br />";	mysql_query($query) or die('Query failed: ' . mysql_error());		});				?>